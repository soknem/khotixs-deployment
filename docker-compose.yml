
services:
  # Kafka Service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_origin
    environment:
      ZOOKEEPER_CLIENT_PORT: 50001
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "50001:50001"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50001"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:50001
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:50002
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "50002:50002"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50002"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s


  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "50003:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: ["--port", "27017"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s


  # MinIO Service
  minio:
    image: minio/minio:latest
    container_name: minio_origin
    ports:
      - "50004:9000"  # Custom external port for MinIO API
      - "50005:9001"  # Custom external port for MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s


  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: postgres_origin
    ports:
      - "50007:5432"  # Custom external port for PostgreSQL
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost", "-p", "5432"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s


volumes:
  mongo_data:
