version: '3.8'

services:
  # Kafka Service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_origin
    environment:
      ZOOKEEPER_CLIENT_PORT: 50001
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "50001:50001"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50001"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - my_network

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "50002:50002"
      - "50008:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:50002,OUTSIDE://localhost:50003
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:50002,OUTSIDE://0.0.0.0:50008
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:50001
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50002"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - my_network

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "50003:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: ["--port", "27017"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    networks:
      - my_network

  # MinIO Service
  minio:
    image: minio/minio:latest
    container_name: minio_origin
    ports:
      - "50004:9000"  # Custom external port for MinIO API
      - "50005:9001"  # Custom external port for MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - my_network

  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: postgres_origin
    ports:
      - "50007:5432"  # Custom external port for PostgreSQL
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost", "-p", "5432"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - my_network

volumes:
  mongo_data:

networks:
  my_network:
    driver: bridge
